<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.qfedu.babytree.mapper.StoryMapper" >
  <resultMap id="BaseResultMap" type="com.qfedu.babytree.pojo.Story" >
    <id column="sto_id" property="stoId" jdbcType="INTEGER" />
    <result column="sto_user_id" property="stoUserId" jdbcType="INTEGER" />
    <result column="sto_baby_id" property="stoBabyId" jdbcType="INTEGER" />
    <result column="sto_likenum" property="stoLikenum" jdbcType="INTEGER" />
    <result column="sto_content" property="stoContent" jdbcType="LONGVARCHAR" />
    <result column="sto_time" property="stoTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.qfedu.babytree.pojo.Story" extends="BaseResultMap" >
    <result column="sto_content" property="stoContent" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    sto_id, sto_user_id, sto_baby_id, sto_likenum
  </sql>
  <sql id="Blob_Column_List" >
    sto_content
  </sql>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from story
    where sto_id = #{stoId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from story
    where sto_id = #{stoId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.qfedu.babytree.pojo.Story" >
    <selectKey resultType="java.lang.Integer" keyProperty="stoId" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into story (sto_id, sto_user_id, sto_baby_id, 
      sto_likenum, sto_content,sto_time)
    values (null , #{stoUserId,jdbcType=INTEGER}, #{stoBabyId,jdbcType=INTEGER},
      #{stoLikenum,jdbcType=INTEGER}, #{stoContent,jdbcType=LONGVARCHAR},now())
  </insert>
  <insert id="insertSelective" parameterType="com.qfedu.babytree.pojo.Story" >

    insert into story
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="stoId != null" >
        sto_id,
      </if>
      <if test="stoUserId != null" >
        sto_user_id,
      </if>
      <if test="stoBabyId != null" >
        sto_baby_id,
      </if>
      <if test="stoLikenum != null" >
        sto_likenum,
      </if>
      <if test="stoContent != null" >
        sto_content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="stoId != null" >
        #{stoId,jdbcType=INTEGER},
      </if>
      <if test="stoUserId != null" >
        #{stoUserId,jdbcType=INTEGER},
      </if>
      <if test="stoBabyId != null" >
        #{stoBabyId,jdbcType=INTEGER},
      </if>
      <if test="stoLikenum != null" >
        #{stoLikenum,jdbcType=INTEGER},
      </if>
      <if test="stoContent != null" >
        #{stoContent,jdbcType=LONGVARCHAR},
      </if>

    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.qfedu.babytree.pojo.Story" >
    update story
    <set >
      <if test="stoUserId != null" >
        sto_user_id = #{stoUserId,jdbcType=INTEGER},
      </if>
      <if test="stoBabyId != null" >
        sto_baby_id = #{stoBabyId,jdbcType=INTEGER},
      </if>
      <if test="stoLikenum != null" >
        sto_likenum = #{stoLikenum,jdbcType=INTEGER},
      </if>
      <if test="stoContent != null" >
        sto_content = #{stoContent,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where sto_id = #{stoId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.qfedu.babytree.pojo.Story" >
    update story
    set sto_user_id = #{stoUserId,jdbcType=INTEGER},
      sto_baby_id = #{stoBabyId,jdbcType=INTEGER},
      sto_likenum = #{stoLikenum,jdbcType=INTEGER},
      sto_content = #{stoContent,jdbcType=LONGVARCHAR}
    where sto_id = #{stoId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.qfedu.babytree.pojo.Story" >
    update story
    set sto_user_id = #{stoUserId,jdbcType=INTEGER},
      sto_baby_id = #{stoBabyId,jdbcType=INTEGER},
      sto_likenum = #{stoLikenum,jdbcType=INTEGER}
    where sto_id = #{stoId,jdbcType=INTEGER}
  </update>


  <resultMap id="story" type="com.qfedu.babytree.pojo.Story" extends="BaseResultMap">
    <id column="sto_id" property="stoId" jdbcType="INTEGER"></id>

    <association property="users" javaType="com.qfedu.babytree.pojo.Users">
      <id column="user_id" property="userId"></id>
      <result column="user_nickname" property="userNickname"/>
      <result column="user_imgurl" property="userImgurl"/>
    </association>

    <collection property="imgs" ofType="com.qfedu.babytree.pojo.Imgs">
      <id column="img_id" property="imgId" jdbcType="INTEGER" />
      <result column="img_url" property="imgUrl" jdbcType="VARCHAR" />
      <result column="story_id" property="storyId" jdbcType="INTEGER" />

    </collection>

  </resultMap>

  <select id="selectStory" resultMap="story">

      select user_id ,user_nickname,user_imgurl,
    sto_content ,sto_likenum,sto_time,img_url,sto_id
    from users INNER JOIN story ON user_id = sto_user_id LEFT OUTER JOIN imgs on sto_id = story_id WHERE user_id in

(SELECT no_noticeid FROM notice WHERE no_userid = #{uid}) order by sto_time desc

  </select>

  <update id="giveLike">

    update story set sto_likenum = sto_likenum + 1 where sto_user_id = #{uid} and sto_id = #{tid}


  </update>


  <resultMap id="spaceInfo" type="com.qfedu.babytree.pojo.Users">

    <id column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="user_nickname" property="userNickname" jdbcType="VARCHAR" />
    <result column="user_imgurl" property="userImgurl" jdbcType="LONGVARCHAR" />
    <result column="count" property="count" jdbcType="INTEGER" />


  </resultMap>

  <select id="getMySpaceinfo" resultMap="spaceInfo" parameterType="int">

    SELECT user_id,users.user_imgurl,users.user_nickname,(SELECT count(1) from notice WHERE no_userid = #{uid} )AS count FROM users WHERE user_id = #{uid}

  </select>
  
  <select id="getmyStory" resultMap="story">

    select user_id ,user_nickname,user_imgurl,
    sto_content ,sto_likenum,sto_time,img_url,sto_id from users INNER JOIN story ON user_id = sto_user_id LEFT OUTER JOIN imgs on sto_id = story_id WHERE user_id = #{uid}

  </select>
  
  <select id="getStoryDetail" resultMap="story">

    select user_id ,user_nickname,user_imgurl,
    sto_content ,sto_likenum,sto_time,img_url,sto_id from users INNER JOIN story ON user_id = sto_user_id LEFT OUTER JOIN imgs on sto_id = story_id WHERE sto_id = #{sid}

  </select>

  <insert id="insertStory">

    insert into imgs values
    <foreach collection="list" separator="," item="img">
      (null,#{img.imgurl},#{img.storyid})
    </foreach>

  </insert>

  <select id="selectAllStory" resultMap="story">

    select user_id ,user_nickname,user_imgurl,
    sto_content ,sto_likenum,sto_time,img_url,sto_id
    from users INNER JOIN story ON user_id = sto_user_id LEFT OUTER JOIN imgs on sto_id = story_id  order by sto_time desc

  </select>


</mapper>